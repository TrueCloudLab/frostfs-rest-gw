// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/TrueCloudLab/frostfs-rest-gw/gen/models"
)

// GetStorageGroupOKCode is the HTTP code returned for type GetStorageGroupOK
const GetStorageGroupOKCode int = 200

/*
GetStorageGroupOK Storage group information.

swagger:response getStorageGroupOK
*/
type GetStorageGroupOK struct {

	/*
	  In: Body
	*/
	Payload *models.StorageGroup `json:"body,omitempty"`
}

// NewGetStorageGroupOK creates GetStorageGroupOK with default headers values
func NewGetStorageGroupOK() *GetStorageGroupOK {

	return &GetStorageGroupOK{}
}

// WithPayload adds the payload to the get storage group o k response
func (o *GetStorageGroupOK) WithPayload(payload *models.StorageGroup) *GetStorageGroupOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get storage group o k response
func (o *GetStorageGroupOK) SetPayload(payload *models.StorageGroup) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStorageGroupOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetStorageGroupBadRequestCode is the HTTP code returned for type GetStorageGroupBadRequest
const GetStorageGroupBadRequestCode int = 400

/*
GetStorageGroupBadRequest Bad request.

swagger:response getStorageGroupBadRequest
*/
type GetStorageGroupBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetStorageGroupBadRequest creates GetStorageGroupBadRequest with default headers values
func NewGetStorageGroupBadRequest() *GetStorageGroupBadRequest {

	return &GetStorageGroupBadRequest{}
}

// WithPayload adds the payload to the get storage group bad request response
func (o *GetStorageGroupBadRequest) WithPayload(payload *models.ErrorResponse) *GetStorageGroupBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get storage group bad request response
func (o *GetStorageGroupBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStorageGroupBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
